# Generated by Django 3.2.13 on 2022-05-29 14:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GitlabBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('merged', models.BooleanField(blank=True, null=True)),
                ('protected', models.BooleanField(blank=True, null=True)),
                ('web_url', models.URLField(unique=True)),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GitlabCommit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_id', models.CharField(max_length=64, unique=True)),
                ('short_id', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('web_url', models.URLField(unique=True)),
                ('created_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='GitlabUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('username', models.CharField(max_length=64, unique=True)),
                ('web_url', models.URLField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=16)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('membership_state', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='GitlabProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField(unique=True)),
                ('web_url', models.URLField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('name_with_namespace', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=100)),
                ('path_with_namespace', models.CharField(max_length=100)),
                ('default_branch', models.CharField(max_length=32)),
                ('readme_url', models.URLField(blank=True, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('empty_repo', models.BooleanField(blank=True, null=True)),
                ('archived', models.BooleanField(blank=True, null=True)),
                ('visibility', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField()),
                ('last_activity_at', models.DateTimeField(blank=True, null=True)),
                ('branches', models.ManyToManyField(to='pygitlab.GitlabBranch')),
                ('commits', models.ManyToManyField(to='pygitlab.GitlabCommit')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitlab_project_creator', to='pygitlab.gitlabuser')),
                ('members', models.ManyToManyField(related_name='gitlab_project_members', to='pygitlab.GitlabUser')),
            ],
        ),
        migrations.CreateModel(
            name='GitlabGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(unique=True)),
                ('web_url', models.URLField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('visibility', models.CharField(max_length=16)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('full_name', models.CharField(max_length=100)),
                ('full_path', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('members', models.ManyToManyField(to='pygitlab.GitlabUser')),
            ],
        ),
        migrations.CreateModel(
            name='GitlabConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_token', models.CharField(max_length=64)),
                ('root_url', models.URLField()),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='gitlabcommit',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitlab_author', to='pygitlab.gitlabuser'),
        ),
        migrations.AddField(
            model_name='gitlabcommit',
            name='committer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitlab_committer', to='pygitlab.gitlabuser'),
        ),
    ]
